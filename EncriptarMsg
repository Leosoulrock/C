#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <stdbool.h>
#define TAM 100000




char CHAVE[] = "aBcD";
int TAM_CHAVE=sizeof(CHAVE);


//vetor de entrada do texto a ser criptografado

char TEXTO[TAM];
int TAM_TEXTO=sizeof(TEXTO);

int TEXTO_CRIPT[TAM];
int TAM_CRIPT=sizeof(TEXTO_CRIPT);

bool cript(){
	int i=0;
	for(i=0;i<strlen(TEXTO);i++){
		TEXTO_CRIPT[i]=TEXTO[i];
	}
	
	printf("\n -- %d -- \n", TEXTO_CRIPT[0]);
	printf("\n --%d --\n",CHAVE[0]);
	
	int aux=0;
	i=0;
	for(aux=0;aux<strlen(TEXTO);){
		for(i =0;i<TAM_CHAVE;i++){
			TEXTO_CRIPT[aux] *= CHAVE[i];
			aux++;
		}
	}
	
	printf("\n -- %d --",TEXTO_CRIPT[0]);
	i=0;
	aux=0;
	
	printf("\n\nTexto encriptado:");
	for(i =0;i<strlen(TEXTO);i++){
	printf("%d",TEXTO_CRIPT[i]);
	}
	
return true;
}




void Recebe_texto(char tipo[]){
	int aux=TAM_TEXTO;
	char pause;
	FILE *arquivo;
	char palavra[100];
	
	if (strcmp(tipo,"msg") ==0){
		printf("\n\nRecebendo mensagem...\n\n");
		printf("\nDigite o texto:");
		gets(TEXTO);
		printf("Tamanho do texto= %d caracteres\n",strlen(TEXTO));
		if(strlen(TEXTO)<=aux){
			printf("Texto recebido com sucesso!\n\n");
			printf("Criptografando texto...");
			if (cript()){
				printf("\n\nTexto criptografado com sucesso!\n\n");
				
				arquivo = fopen("c:\\cript\\arquivos_gerados\\criptografados.txt","wt");
				if(arquivo==NULL){
					printf("Erro ao criar o arquivo!");
					system("pause");
				}else{
					int i=0;
					for(i=0;i<strlen(TEXTO);i++){
						fprintf(arquivo," %d",TEXTO_CRIPT[i]);
					}
				}
				fclose(arquivo);
				printf("\n\nPressione enter para abrir a pasta do arquivo gerado!");
				scanf("%c", &pause);
				setbuf(stdin,NULL);
				system("explorer c:\\cript\\arquivos_gerados\\");
			}else{
				printf("\n\nTexto nao foi criptrografado, tente novamente!");
			}
		}else{
			printf("\n\nErro!Tamanho do texto excede o limite de caracteres");
			system("pause");
		}
	system("pause");	
		
	}else if(strcmp(tipo,"arquivo")==0){
			printf("\n\nInstrucoes para importar um arquivo de texto:");
			printf("\n\n 1 - Renomeia o arquivo para 'original.txt'");
			printf("\n\n 2 - Copie o arquivo para a pasta que sera aberta a seguir");
			printf("\n\n 3 - Feche o explorador e retorne a aplicacao");
			
			printf("\n\n\n Pressione Enter para abrir a pasta");
			scanf("%c",&pause);
			setbuf(stdin,NULL);
			
			system("explorer c:\\cript\\arquivos_originais\\");
			
			printf("\n\nPressione enter apos colar o arquivo na pasta...\n\n");
			scanf("%c",&pause);
			setbuf(stdin,NULL);
			
			printf("\n\nIMportando arquivo...\n\n");
			
			arquivo = fopen(" c:\\cript\\arquivos_originais\\original.txt","r");
			if(arquivo==NULL){
				printf("Erro ao ler o arquivo!");
				system("pause");
			}else{
				while(!feof(arquivo)){
					fscanf(arquivo, "%d", palavra);
					strcat(TEXTO, " ");
					strcat(TEXTO, palavra);
				}
				fclose(arquivo);
				if(strlen(TEXTO)<=aux){
					printf("Texto recebido com sucesso!\n\n");
					printf("Criptografando texto...");
					if (cript()){
						printf("\n\nTexto criptografado com sucesso!\n\n");
						printf("\n\nPressione enter para abrir a pasta do arquivo gerado!");
						scanf("%c", &pause);
						setbuf(stdin,NULL);
						system("explorer c:\\cript\\arquivos_gerados\\");
					}else{
						printf("\n\nTexto nao foi criptrografado, tente novamente!");
					}
				}else{
					printf("\n\nErro!Tamanho do texto excede o limite de caracteres");
					system("pause");
				}
			system("pause");	
			}
	}else{
		printf("\n\nErro ao receber texto\n\n");
	}
};

void Criptografar_Menu(){
		int opcao = 0;

		printf("\n\tCriptografia de dados");
		printf("\n\n 1 - Digitar Mensagem");
		printf("\n\n 2 - Importar arquivo de texto (txt)");
		printf("\n\n 3 - Sair");
		printf("\n\n Informe a opcao desejada:");
		scanf("%d", &opcao);
		setbuf(stdin,NULL);
		switch(opcao){
			case 1 :
				system("cls");
				Recebe_texto("msg");
				break;
			case 2 :
				system("cls");
				Recebe_texto("arquivo");
				break;		
			case 3 :
				break;
			default:
				printf("Opcao invalida!Digite novamente...");
		}
	}
void Criptografar(){
	Criptografar_Menu();
}


bool Descriptografar(){
	FILE *arquivo;
	int valor;
	int pos_chave,pos_texto;
	arquivo = fopen("c:\\cript\\arquivos_recebidos\\criptografado.txt","r");
	if(arquivo==NULL){
		return false;
	}
	pos_chave=0;
	pos_texto=0;
	while(!feof(arquivo)){
		fscanf(arquivo," %d",&valor);
		
		valor /= CHAVE[pos_chave];
		
		TEXTO[pos_texto] =(char) valor;
		
		pos_texto++;
		
		if(pos_chave==TAM_CHAVE-1){
			pos_chave=0;
		}else{
			pos_chave++;
		}
		
	}

	return true;
}
void Receber_Arquivo(){
	char op;
	printf("\n\nInstrucoes para importar um arquivo criptografado:");
			printf("\n\n 1 - Renomeia o arquivo para 'criptografado.txt'");
			printf("\n\n 2 - Copie o arquivo para a pasta que sera aberta a seguir");
			printf("\n\n 3 - Feche o explorador e retorne a aplicacao");
			
			printf("\n\n\n Pressione Enter para abrir a pasta");
			scanf("%c",&op);
			setbuf(stdin,NULL);
			
			system("explorer c:\\cript\\arquivos_recebidos\\");
			
			printf("\n\nPressione enter apos colar o arquivo na pasta...\n\n");
			scanf("%c",&op);
			setbuf(stdin,NULL);
			
			printf("\n\nIMportando arquivo...\n\n");
			
			if(Descriptografar()){
				printf("\n\n\nArquivo descriptografado com sucesso!");
				system("pause");
				system("cls");
				printf("%s\n\n",TEXTO);
				system("pause");
				scanf("%c",&op);
				
			}else{
				printf("Nao foi possivel descriptografar o arquivo!");
				system("pause");
			}	
};


void Menu(){
	while(1){
		int opcao = 0;
		system("cls");
		printf("\n\tCriptografia de dados");
		printf("\n\n 1 - Criptografar mensagem");
		printf("\n\n 2 - Receber Arquivo");
		printf("\n\n 3 - Sair");
		printf("\n\n Informe a opcao desejada:");
		scanf("%d", &opcao);
		setbuf(stdin,NULL);
		switch(opcao){
			case 1 :
				system("cls");
				Criptografar();
				break;
			case 2 :
				system("cls");
				Receber_Arquivo();
				break;
				
			case 3 :
				printf("\nFinalizando...\n\n");
				system("pause");
				exit(0);
				break;
			default:
				printf("Opcao invalida!Digite novamente...");
				
				
		}
	}
}

int main(){
	Menu();
  
    return 0;
}
